<Application x:Class="Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:BigView="clr-namespace:Desktop.Views.BigViews"
             xmlns:SmallView="clr-namespace:Desktop.Views.SmallViews"
             xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
             xmlns:md ="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf" 
             xmlns:BigViewModel="clr-namespace:Desktop.ViewModels.BigViewModels"
             xmlns:SmallViewModel="clr-namespace:Desktop.ViewModels.SmallViewModels"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Application.Resources>

        <ResourceDictionary>

            <DataTemplate DataType="{x:Type BigViewModel:MainViewModel}">
                <BigView:MainView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:DashboardViewModel}">
                <BigView:DashboardView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:HistoryViewModel}">
                <BigView:HistoryView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:TradeViewModel}">
                <BigView:TradeView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:WalletViewModel}">
                <BigView:WalletView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:RegistrationViewModel}">
                <BigView:RegistrationView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:AuthViewModel}">
                <BigView:AuthView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:BaseViewModel}">
                <BigView:BaseView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type BigViewModel:RecoveryViewModel}">
                <BigView:RecoveryView/>
            </DataTemplate>


            <DataTemplate DataType="{x:Type SmallViewModel:WalletContentViewModel}">
                <SmallView:WalletContentView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type SmallViewModel:WalletDepositViewModel}">
                <SmallView:WalletDepositView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type SmallViewModel:WalletWidthdrawViewModel}">
                <SmallView:WalletWidthdrawView/>
            </DataTemplate>


            <BitmapImage x:Key="Welcomepg" UriSource="/Images/WelcomePg.png" />
            <BitmapImage x:Key="Background" UriSource="/Images/Frame 5(7).png" />
            <BitmapImage x:Key="WelcomeBlur" UriSource="/Images/WelcomeBlur.png" />
            <BitmapImage x:Key="AuthImage" UriSource="/Images/8b126cf30c417b9c55b1b9d1bc5f68a3.jpg" />

            <SolidColorBrush x:Key="BlackColor" Color="#083353"/>
            <SolidColorBrush x:Key="GreyColor" Color="#B7B7B7"/>




            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="#262930" />
                <Setter Property="Foreground" Value="#7E7E7E" />
                <Setter Property="Height" Value="60" />
                <Setter Property="Width" Value="60" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="5 0 5 5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="10" BorderBrush="Transparent" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="#9FE2EA" Duration="0:0:0.3"/>

                                            <ColorAnimation Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                To="#A1E1EA" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="Transparent" Duration="0:0:0.3"/>

                                            <ColorAnimation Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                To="#7E7E7E" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="WalletOperationsButtons" TargetType="Button">
                <Setter Property="Background" Value="#262930" />
                <Setter Property="Foreground" Value="#fff" />
                <Setter Property="FontSize" Value="17" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="Height" Value="54" />
                <Setter Property="Width" Value="170" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="5 1 5 1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="13" BorderBrush="Transparent" BorderThickness="2">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>






            <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#DDDDDF" />
                <Setter Property="FontSize" Value="30" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Margin" Value="20,0,0,0" />
            </Style>


            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>




            <Style x:Key="RoundedButtonStyleLogIn" TargetType="Button">
                <Setter Property="Foreground" Value="#BCBFC6"/>
                <Setter Property="Width" Value="76"/>
                <Setter Property="Height" Value="30"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                        BorderThickness="2"
                        Background="#161719" 
                        CornerRadius="6">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#212425"/>
                                </Border.BorderBrush>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#BCBFC6" Duration="0:0:0.3"/>
                                                <ColorAnimation Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                    To="#BCBFC6" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#212425" Duration="0:0:0.3"/>
                                                <ColorAnimation Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                    To="#BCBFC6" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>






            <Style x:Key="CustomBorder" TargetType="Border">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Margin" Value="0 0 0 10" />
                <Setter Property="Height" Value="53" />
                <Setter Property="Width" Value="370" />
                <Setter Property="CornerRadius" Value="13" />
                <Setter Property="BorderBrush" Value="#5F6266" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#40231628" Offset="0"/>
                            <GradientStop Color="#10111213" Offset="0.5"/>
                            <GradientStop Color="#802A2826" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <PointAnimation
                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.StartPoint)"
                            To="0.1,0.5" Duration="0:0:0.3"/>
                                    <PointAnimation
                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.EndPoint)"
                            To="0.9,0.5" Duration="0:0:0.3"/>
                                    <ColorAnimation
                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].Color"
                            To="#FF231628" Duration="0:0:0.3"/>
                                    <ColorAnimation
                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].Color"
                            To="#FF111213" Duration="0:0:0.3"/>
                                    <ColorAnimation
                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].Color"
                            To="#FF2A2826" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <PointAnimation
                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.StartPoint)"
                            To="0,0.5" Duration="0:0:0.3"/>
                                    <PointAnimation
                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.EndPoint)"
                            To="1,0.5" Duration="0:0:0.3"/>
                                    <ColorAnimation
                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].Color"
                            To="#40231628" Duration="0:0:0.3"/>
                                    <ColorAnimation
                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].Color"
                            To="#10111213" Duration="0:0:0.3"/>
                                    <ColorAnimation
                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].Color"
                            To="#802A2826" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style TargetType="PasswordBox" x:Key="PasswordBoxWithoutBottomLine">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="PasswordBox" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="md:HintAssist.Hint" Value="Password" />
                <Setter Property="md:HintAssist.HintOpacity" Value="0" />
                <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="Transparent" />
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="Transparent" />
            </Style>



            <Style x:Key="DataGridRowStyleSuperAdmine" TargetType="{x:Type DataGridRow}">
                <Setter Property="Margin" Value="0 4 0 0" />
                <Setter Property="Background" Value="#2E2E38"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#3C3C46"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="17"/>

                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#3C3C46"/>
                        <Setter Property="Foreground" Value="#ffffff"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontSize" Value="17"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="true"/>
                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="#dfdfdf"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="SizeWE"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="DataGridColumnHeaderStyleSuperAdmine" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#69717D" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Margin" Value="15 0 15 10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </theme:DataGridHeaderBorder>
                                <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="DataGridCellStyleSuperAdmine" TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="15 0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="DataGridStyleSuperAdmine" TargetType="{x:Type DataGrid}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FFFFFF"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="HeadersVisibility" Value="Column" />
                <Setter Property="Margin" Value="0 10 0 0" />
                <Setter Property="Grid.Row" Value="5" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="SelectionUnit" Value="FullRow" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="GridLinesVisibility" Value="None" />
                <Setter Property="ColumnWidth" Value="*" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                <Grid Grid.Column="1" Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping" Value="true"/>
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>




            <Style x:Key="gridEditButtonSuperAdmine" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Content" Value="More" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Width" Value="65" />
                <Setter Property="BorderBrush" Value="#634FEC" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Foreground" Value="#634FEC" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="VerticalAlignment" Value="Center" />

                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="8">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#FFFFFF" />
                        <Setter Property="FontWeight" Value="Medium" />
                        <Setter Property="BorderBrush" Value="#6359EC" />
                        <Setter Property="Background" Value="#6359EC" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InfoCoinsBorder" TargetType="Border">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="CornerRadius" Value="15" />
                <Setter Property="Padding" Value="20" />
            </Style>


            <Style x:Key="titleText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource BlackColor}" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>


            <Style x:Key="secondaryText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource GreyColor}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="0 5 0 5" />
            </Style>



            <Style TargetType="ListBox" x:Key="CustomListBoxStyle">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>

                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border CornerRadius="20" Padding="15" Margin="0 5" Background="#10ffffff">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="2.3*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>


                                                <StackPanel Orientation="Horizontal">
                                                    <Border Width="50" Height="50" CornerRadius="15" Margin="0 0 10 0">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                <GradientStop Color="#3359F9" Offset="0"/>
                                                                <GradientStop Color="#04427C" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Image Source="{Binding ImagePath}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="38" Height="38"/>
                                                    </Border>

                                                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center">
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Name}" FontWeight="SemiBold" FontSize="15" Foreground="#fff"/>
                                                            <TextBlock Text="{Binding Id}" FontWeight="SemiBold" FontSize="15" Foreground="#6B6B6B" Margin="5 0 0 0"/>
                                                        </StackPanel>

                                                        <TextBlock Text="{Binding Margin, StringFormat={}{0:#0.##'%'}}" FontWeight="SemiBold" FontSize="13" Foreground="#FA744E"/>

                                                    </StackPanel>
                                                </StackPanel>
                                                <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal" Margin="0 0 3 0">
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding Quantity}" FontWeight="Regular" Foreground="#fff" FontSize="15"/>
                                                        <TextBlock Text="{Binding Amount, StringFormat={}{0:C}}" FontWeight="SemiBold" FontSize="13" HorizontalAlignment="Right" Foreground="#6B6B6B"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>










            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Application.Resources>
</Application>
